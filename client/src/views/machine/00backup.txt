초기화 - 주황색(#fb8c00)
삭제 - 빨간색(#f44335)
등록(초기화, 삭제 아닌 버튼들) - 초록색(#4caf50)

클래스 명을 btn-danger, btn-success, btn-warning 이렇게 주면 해당 색깔과 같은 색으로 지정됩니다 

테이블 -> 숫자는 오른쪽정렬 
글자(글자수 다른 값) 왼쪽정렬
글자(날짜 등 글자수 같은 값) 중간정렬



=================================================================================================



<추가 작업 예정>  ===> 1/1일까지 내 작업 못끝내면 팀원들한테 말하기
상단바 클릭시 젤 윗 페이지 이동
새로고침시 현재 페이지의 사이드바 정보 출력
상단바 클릭시 사이드바 on/off





=================================================================================================

<할일>
-- 비가동 내역에 상세 내용 표시(비동기 사유, 등록자, 종료자)
-- 비가동 완료시간 정해져 있는 경우 자동으로 설비 상태 run으로 변경
등록 수정 삭제 -> 제약 조건 설정( 설비 부서 )
=> 설비 수정 및 삭제시 추가 조건(설비가 stop이고 작업 예약 없을시)


<급한거>
유효성 체크 => 로그인 정보 디코의 협업에 사용법 있음
검색창 통합



--부품 등록 : 설비 선택 / 구매날짜 date
--설비 상세 : 부품 정보 - 교체 모달




<작업완료>
전체 모달 회색 배경
설비 조회 레이아웃 변경
비가동창 레이아웃 변경
비가동 등록 레이아웃 정렬/ 버튼 변경
정비 요청 내역 레이아웃 변경
정비 요청 관리 페이지 통합




=================================================================================================
<notify>
1. text에 내용 적고
2. type에는 세가지 문자열 값만 들어갈 수 있음
    1. success: 초록색
    2. error: 빨간색
    3. warn: 주황색

this.$notify({
      text: "중복 주문은 등록 불가합니다",
      type: 'fail',
});






=================================================================================================
<session>

== options ==
<!-- 모달 샘플 -->
<template>
  <div>
      <h3>{{ testing }}</h3>
  </div>
</template>

<script>
import { mapMutations } from "vuex";

export default {
  data() {
    return {
      testing: {},
    };
  },
  methods: {
    ...mapMutations(["addLoginInfo"]),
    test(){
      this.testing = this.$store.state.loginInfo;
      console.log('ddd', this.$store.state.loginInfo);
    },
  },

  mounted() {
      this.test();
  },
};
</script>






== composition ==
<!-- 모달 샘플 -->
<template>
  <div>
      <h3>{{ testing }}</h3>
  </div>
</template>


<script setup>
import { onBeforeMount, ref } from 'vue'; // onBeforeMount
import { useStore } from 'vuex'; // Vuex 스토어 가져오기

// Vuex 스토어 인스턴스 가져오기
const store = useStore();

const testing = ref({});
const test = () => {
  testing.value = store.state.loginInfo;
  console.log('ccc', store.state.loginInfo);
};

// 화면 생성되는 시점
onBeforeMount(() => {
  test();
});
</script>
